% Encoding: windows-1252

@Article{Lattner2020,
  author      = {Chris Lattner and Mehdi Amini and Uday Bondhugula and Albert Cohen and Andy Davis and Jacques Pienaar and River Riddle and Tatiana Shpeisman and Nicolas Vasilache and Oleksandr Zinenko},
  title       = {MLIR: A Compiler Infrastructure for the End of Moore's Law},
  abstract    = {This work presents MLIR, a novel approach to building reusable and extensible compiler infrastructure. MLIR aims to address software fragmentation, improve compilation for heterogeneous hardware, significantly reduce the cost of building domain specific compilers, and aid in connecting existing compilers together. MLIR facilitates the design and implementation of code generators, translators and optimizers at different levels of abstraction and also across application domains, hardware targets and execution environments. The contribution of this work includes (1) discussion of MLIR as a research artifact, built for extension and evolution, and identifying the challenges and opportunities posed by this novel design point in design, semantics, optimization specification, system, and engineering. (2) evaluation of MLIR as a generalized infrastructure that reduces the cost of building compilers-describing diverse use-cases to show research and educational opportunities for future programming languages, compilers, execution environments, and computer architecture. The paper also presents the rationale for MLIR, its original design principles, structures and semantics.},
  date        = {2020-02-25},
  eprint      = {2002.11054v2},
  eprintclass = {cs.PL},
  eprinttype  = {arXiv},
  file        = {:http\://arxiv.org/pdf/2002.11054v2:PDF},
  keywords    = {cs.PL, cs.LG},
}

@Article{Schueki2020,
  author = {Fabian Schueki and Andreas Kurth and Tobias Grosser and Luca Benini},
  title  = {LLHD: A Multi-Level Intermediate Representation for Hardware Description Languages},
  year   = {2020},
}

@Article{Toscano2012,
  author      = {Luca Toscano and Gabriele D'Angelo and Moreno Marzolla},
  title       = {Parallel Discrete Event Simulation with Erlang},
  abstract    = {Discrete Event Simulation (DES) is a widely used technique in which the state of the simulator is updated by events happening at discrete points in time (hence the name). DES is used to model and analyze many kinds of systems, including computer architectures, communication networks, street traffic, and others. Parallel and Distributed Simulation (PADS) aims at improving the efficiency of DES by partitioning the simulation model across multiple processing elements, in order to enabling larger and/or more detailed studies to be carried out. The interest on PADS is increasing since the widespread availability of multicore processors and affordable high performance computing clusters. However, designing parallel simulation models requires considerable expertise, the result being that PADS techniques are not as widespread as they could be. In this paper we describe ErlangTW, a parallel simulation middleware based on the Time Warp synchronization protocol. ErlangTW is entirely written in Erlang, a concurrent, functional programming language specifically targeted at building distributed systems. We argue that writing parallel simulation models in Erlang is considerably easier than using conventional programming languages. Moreover, ErlangTW allows simulation models to be executed either on single-core, multicore and distributed computing architectures. We describe the design and prototype implementation of ErlangTW, and report some preliminary performance results on multicore and distributed architectures using the well known PHOLD benchmark.},
  date        = {2012-06-13},
  doi         = {10.1145/2364474.2364487},
  eprint      = {1206.2775v3},
  eprintclass = {cs.DC},
  eprinttype  = {arXiv},
  file        = {:http\://arxiv.org/pdf/1206.2775v3:PDF},
  keywords    = {cs.DC, D.1.3; I.6.8},
}

@Article{Ashenden1994,
  author = {Peter J. Ashenden and Henry Detmold and Wayne S. McKeen},
  title  = {Execution of VHDL Models Using Parallel Discrete Event Simulation Algorithms},
  year   = {1994},
  issn   = {1065-514X},
  pages  = {1-16},
  volume = {2},
  doi    = {10.1155/1994/86178},
}

@Misc{Walker1995,
  author = {Peter A. Walker},
  title  = {Asynchronous, Distributed Event Driven Simulation Algorithm for Execution of VHDL on Parallel Processors},
  year   = {1995},
  doi    = {10.1109/dac.1995.250079},
  issn   = {0738-100X},
}

@Misc{Fujimoto,
  author = {R. M. Fujimoto},
  title  = {Parallel and Distributed Discrete Event Simulation: Algorithms and Applications},
  doi    = {10.1109/wsc.1993.718035},
}

@Misc{Bain,
  author = {W. L. Bain},
  title  = {Parallel Discrete Event Simulation Using Synchronized Event Schedulers},
  doi    = {10.1109/dmcc.1990.555367},
}

@Comment{jabref-meta: databaseType:bibtex;}
